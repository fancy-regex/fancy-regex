# Based on https://github.com/actions-rs/meta/blob/master/recipes/msrv.md

name: ci
on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '17 01 * * 0'
jobs:
  check:
    name: check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.66.1 # MSRV (minimum supported Rust version)
          - stable
          - beta
        include:
          - rust: 1.66.1
            msrv: true
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  example:
    name: example
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Run cargo run --example
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --example toy trace '\d*' '1122 33'

  fmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  coverage:
    if: ${{ github.event_name != 'schedule' }}
    name: coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:0.22.0
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Generate code coverage
        run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
